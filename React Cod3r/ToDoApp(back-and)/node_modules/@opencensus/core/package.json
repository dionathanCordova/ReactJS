{
  "_args": [
    [
      {
        "raw": "@opencensus/core@^0.0.9",
        "scope": "@opencensus",
        "escapedName": "@opencensus%2fcore",
        "name": "@opencensus/core",
        "rawSpec": "^0.0.9",
        "spec": ">=0.0.9 <0.0.10",
        "type": "range"
      },
      "C:\\Users\\Usuario\\Documents\\Cursos\\Curso React\\ReactJS\\React Cod3r\\ToDoApp(back-and)\\node_modules\\@pm2\\io"
    ]
  ],
  "_from": "@opencensus/core@^0.0.9",
  "_hasShrinkwrap": false,
  "_id": "@opencensus/core@0.0.9",
  "_location": "/@opencensus/core",
  "_nodeVersion": "10.14.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/core_0.0.9_1550020039577_0.6886203485231801"
  },
  "_npmUser": {
    "name": "mayurkale22",
    "email": "mayurkale22@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@opencensus/core@^0.0.9",
    "scope": "@opencensus",
    "escapedName": "@opencensus%2fcore",
    "name": "@opencensus/core",
    "rawSpec": "^0.0.9",
    "spec": ">=0.0.9 <0.0.10",
    "type": "range"
  },
  "_requiredBy": [
    "/@pm2/io"
  ],
  "_resolved": "https://registry.npmjs.org/@opencensus/core/-/core-0.0.9.tgz",
  "_shasum": "b16f775435ee309433e4126af194d37313fc93b3",
  "_shrinkwrap": null,
  "_spec": "@opencensus/core@^0.0.9",
  "_where": "C:\\Users\\Usuario\\Documents\\Cursos\\Curso React\\ReactJS\\React Cod3r\\ToDoApp(back-and)\\node_modules\\@pm2\\io",
  "author": {
    "name": "Google Inc."
  },
  "bugs": {
    "url": "https://github.com/census-instrumentation/opencensus-node/issues"
  },
  "contributors": [
    {
      "name": "Google LLC"
    },
    {
      "name": "CESAR Team",
      "url": "www.cesar.org.br"
    }
  ],
  "dependencies": {
    "continuation-local-storage": "^3.2.1",
    "log-driver": "^1.2.7",
    "semver": "^5.5.0",
    "shimmer": "^1.2.0",
    "uuid": "^3.2.1"
  },
  "description": "OpenCensus is a toolkit for collecting application performance and behavior data.",
  "devDependencies": {
    "@types/continuation-local-storage": "^3.2.1",
    "@types/mocha": "^5.2.5",
    "@types/node": "^10.12.12",
    "@types/once": "^1.4.0",
    "@types/semver": "^5.5.0",
    "@types/shimmer": "^1.0.1",
    "@types/uuid": "^3.4.3",
    "codecov": "^3.1.0",
    "gts": "^0.9.0",
    "intercept-stdout": "^0.1.2",
    "mocha": "^5.0.4",
    "ncp": "^2.0.0",
    "nyc": "13.1.0",
    "ts-node": "^7.0.1",
    "typescript": "~2.9.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-31Q4VWtbzXpVUd2m9JS6HEaPjlKvNMOiF7lWKNmXF84yUcgfAFL5re7/hjDmdyQbOp32oGc+RFV78jXIldVz6Q==",
    "shasum": "b16f775435ee309433e4126af194d37313fc93b3",
    "tarball": "https://registry.npmjs.org/@opencensus/core/-/core-0.0.9.tgz",
    "fileCount": 99,
    "unpackedSize": 286684,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcY23ICRA9TVsSAnZWagAAQn8QAIOyb+Yz9QkZ3yt12si5\nFrEJmNA7TsCab/VFrNnsdXEX4OzhdqDx2c5Vdci2veMWEc81WSsszE41BLbj\nXvY/D7nWVmQIAbXsLm0XGUqEI2cjAzpAYY99oTd9iFSy4z9WUvnPS6xutt58\nFnYR9DvmonCSvoiRtdXwzhFRMHQfKTQs2VgtGhxMsG3hpc6QqkgAf2GcOScq\nVVZd6CMVws/Z4s1tj/h7BM+HejwJ+vzhc6iGStpJG26nk3z3A3zok6ZonZcb\ncWL9jVwBJX8txRlVSCWAfpE6DZ3PY/E39SYdutl88ctKAB7VmuX8BVIuOigZ\nB7k7tbOhH1/T/ffdzky2tEwgBh3moyk0ETMGZdFThI1Xx9dWLN8qP8p6OztV\n8WktAV8qFnzgEqyTX6fZQAsQ1vLf4+reADYQsGGdxrHXY/dEp5sI/VBRU/7y\n8YFC6T7Y229mnDxMQULWkjgRHrS5M3W4cRP8mUsBoAcBUsAbsaPybA5DSU77\nCOAdoJ5gYDSaCC7vWOVcbt9Wf+HTv7mlVQXuTDzkIIUXeWtyKU4uU77kfeQw\nrdTJiW6rJB5WWnb71KN7glwFYdx97w8/FcOXStNbM0KVOHEtkU/nPl+6hzEh\neTCdnaOQiCGo0jwUDjfOfrySV0/1+pwNBn+XGGJWYW2j48m8pPWTnbt2XOAQ\nblAG\r\n=beh6\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6.0"
  },
  "files": [
    "build/src/**/*.js",
    "build/src/**/*.d.ts",
    "doc",
    "CHANGELOG.md",
    "LICENSE",
    "README.md"
  ],
  "homepage": "https://github.com/census-instrumentation/opencensus-node#readme",
  "keywords": [
    "opencensus",
    "nodejs",
    "tracing",
    "profiling",
    "metrics",
    "stats"
  ],
  "license": "Apache-2.0",
  "main": "build/src/index.js",
  "maintainers": [
    {
      "name": "bogdandrutu",
      "email": "bogdandrutu@gmail.com"
    },
    {
      "name": "google-admin",
      "email": "github-admin@google.com"
    },
    {
      "name": "google-wombot",
      "email": "node-team-npm+wombot@google.com"
    },
    {
      "name": "isaikevych",
      "email": "isaikevych@google.com"
    },
    {
      "name": "kjin",
      "email": "kelvinjin@google.com"
    },
    {
      "name": "mayurkale22",
      "email": "mayurkale22@gmail.com"
    },
    {
      "name": "ofrobots",
      "email": "ofrobots@google.com"
    }
  ],
  "name": "@opencensus/core",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# OpenCensus Core Node.js\n[![Gitter chat][gitter-image]][gitter-url] ![Node Version][node-img] [![NPM Published Version][npm-img]][npm-url] ![dependencies Status][dependencies-status] ![devDependencies Status][devdependencies-status] ![Apache License][license-image]\n\nOpenCensus for Node.js is an implementation of OpenCensus, a toolkit for collecting application performance and behavior monitoring data. It currently includes 3 apis: stats, tracing and tags.\n\nThe library is in alpha stage and the API is subject to change.\n\n## Installation\n\nInstall the opencensus-core package with NPM:\n```bash\nnpm install @opencensus/core\n```\n\n## Usage\n\n#### Get the global Stats manager instance.\n\nTo enable metrics, we’ll import a few items from OpenCensus Core package.\n\n```javascript\nconst { globalStats, MeasureUnit, AggregationType, TagMap } = require('@opencensus/core');\n\n// The latency in milliseconds\nconst mLatencyMs = globalStats.createMeasureDouble(\n  \"repl/latency\",\n  MeasureUnit.MS,\n  \"The latency in milliseconds\"\n);\n```\n\n#### Create Views and Tags:\n\nWe now determine how our metrics will be organized by creating ```Views```. We will also create the variable needed to add extra text meta-data to our metrics – ```methodTagKey```, ```statusTagKey```, and ```errorTagKey```.\n\n```javascript\nconst methodTagKey = { name: \"method\" };\nconst statusTagKey = { name: \"status\" };\nconst errorTagKey = { name: \"error\" };\n\n// Create & Register the view.\nconst latencyView = globalStats.createView(\n  \"demo/latency\",\n  mLatencyMs,\n  AggregationType.DISTRIBUTION,\n  [methodTagKey, statusTagKey, errorTagKey],\n  \"The distribution of the latencies\",\n  // Bucket Boundaries:\n  // [>=0ms, >=25ms, >=50ms, >=75ms, >=100ms, >=200ms, >=400ms, >=600ms, >=800ms, >=1s, >=2s, >=4s, >=6s]\n  [0, 25, 50, 75, 100, 200, 400, 600, 800, 1000, 2000, 4000, 6000]\n);\nglobalStats.registerView(latencyView);\n```\n\n#### Recording Metrics:\n\nNow we will record the desired metrics. To do so, we will use ```globalStats.record()``` and pass in measurements.\n\n```javascript\nconst [_, startNanoseconds] = process.hrtime();\nconst tags = new TagMap();\ntags.set(methodTagKey, { value: \"REPL\" });\ntags.set(statusTagKey, { value: \"OK\" });\n\nglobalStats.record([{\n  measure: mLatencyMs,\n  value: sinceInMilliseconds(startNanoseconds)\n}], tags);\n\nfunction sinceInMilliseconds(startNanoseconds) {\n  const [_, endNanoseconds] = process.hrtime();\n  return (endNanoseconds - startNanoseconds) / 1e6;\n}\n```\n\nMeasures can be of type `Int64` or `DOUBLE`, created by calling `createMeasureInt64` and `createMeasureDouble` respectively. Its units can be:\n\n| MeasureUnit | Usage |\n| ----------- | ----- |\n| `UNIT` | for general counts |\n| `BYTE` | bytes |\n| `KBYTE` | Kbytes |\n| `SEC` | seconds |\n| `MS` | millisecond |\n| `NS` | nanosecond |\n\nViews can have agregations of type `SUM`, `LAST_VALUE`, `COUNT` and `DISTRIBUTION`. To know more about Stats core concepts, please visit: [https://opencensus.io/core-concepts/metrics/](https://opencensus.io/core-concepts/metrics/)\n\nSee [Quickstart/Metrics](https://opencensus.io/quickstart/nodejs/metrics/) for a full example of registering and collecting metrics.\n\n## Useful links\n- For more information on OpenCensus, visit: <https://opencensus.io/>\n- To checkout the OpenCensus for Node.js, visit: <https://github.com/census-instrumentation/opencensus-node>\n- For help or feedback on this project, join us on [gitter](https://gitter.im/census-instrumentation/Lobby)\n\n[gitter-image]: https://badges.gitter.im/census-instrumentation/lobby.svg\n[gitter-url]: https://gitter.im/census-instrumentation/lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n[npm-url]: https://www.npmjs.com/package/@opencensus/core\n[npm-img]: https://badge.fury.io/js/%40opencensus%2Fcore.svg\n[node-img]: https://img.shields.io/node/v/@opencensus/core.svg\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-status]: https://david-dm.org/census-instrumentation/opencensus-node/status.svg?path=packages/opencensus-core\n[devdependencies-status]:\nhttps://david-dm.org/census-instrumentation/opencensus-node/dev-status.svg?path=packages/opencensus-core\n\n## LICENSE\n\nApache License 2.0\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/census-instrumentation/opencensus-node.git"
  },
  "scripts": {
    "check": "gts check",
    "clean": "rimraf build/*",
    "codecov": "nyc report --reporter=json && codecov -f coverage/*.json",
    "compile": "tsc -p .",
    "compile:release": "tsc -p tsconfig-release.json",
    "fix": "gts fix",
    "posttest": "npm run check",
    "prepare": "npm run compile:release",
    "pretest": "npm run compile",
    "test": "nyc mocha build/test/**/*.js"
  },
  "types": "build/src/index.d.ts",
  "version": "0.0.9"
}
